@using Entities
@using Business

@inject NavigationManager NavManager

<EditForm Model="@oStorage">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label for="categories">Bodega:</label>
        <InputSelect id="wherehouses" @bind-Value="oStorage.WareHouseId" class="form-control">
            <option value="">Seleccionar bodega ...</option>
            @foreach (var wherehouse in warehouses)
            {
                <option value="@wherehouse.WareHouseId">@wherehouse.WareHouseName</option>
            }
        </InputSelect>
    </div>
    <div class="form-group">
        <label for="products">Producto:</label>
        <InputSelect id="products" @bind-Value="oStorage.ProductId" class="form-control">
            <option value="">Seleccionar producto ...</option>
            @foreach (var product in products)
            {
                <option value="@product.ProductId">@product.ProductName</option>
            }
        </InputSelect>
    </div>
    <div class="form-group">
        <input type="button" value="Agregar Producto" @onclick="SaveStorage" class="form-control btn btn-dark" />
    </div>
</EditForm>
<hr />
<div class="h3 text-center">
    @message
</div>
<hr />

@code {
    StorageEntity oStorage = new StorageEntity();
    private List<ProductEntity> products = new List<ProductEntity>();
    private List<WareHouseEntity> warehouses = new List<WareHouseEntity>();

    private string message;

    protected override async Task OnInitializedAsync()
    {
        warehouses = B_Warehouse.WareHouseList();
        products = B_Product.ProductsList();
    }

    private void SaveStorage()
    {
        oStorage.StorageId = $"{oStorage.WareHouseId}-{oStorage.ProductId}";

        if (!B_Storage.IsProductInWarehouse(oStorage.StorageId))
        {
            oStorage.LastUpdate = DateTime.Now;
            B_Storage.CreateStorage(oStorage);

            message = "Producto Registrado";
        }
        else
        {
            message = "El producto ya existe en la bodega";
        }
    }


}